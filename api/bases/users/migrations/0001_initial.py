# Generated by Django 5.0.6 on 2024-07-05 05:39

import api.bases.users.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, help_text='자원 고유 ID', primary_key=True, serialize=False, unique=True)),
                ('file', models.ImageField(blank=True, height_field='height', help_text='이미지', null=True, upload_to='avatars', width_field='width')),
                ('width', models.PositiveIntegerField(blank=True, help_text='이미지 넓이', null=True)),
                ('height', models.PositiveIntegerField(blank=True, help_text='이미지 높이', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivationLog',
            fields=[
                ('activation_key', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('confirm_type', models.CharField(choices=[('signup', 'signup'), ('password_reset', 'password_reset'), ('validate_email', 'validate_email')], default='signup', max_length=30)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actionvation_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpiringToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auth_token', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(blank=True, help_text='이름', max_length=30, verbose_name='name')),
                ('nickname', models.CharField(blank=True, help_text='별명', max_length=30, null=True)),
                ('phone', models.CharField(blank=True, help_text='휴대폰 번호', max_length=20, null=True)),
                ('mobile_carrier', models.CharField(blank=True, choices=[('01', 'SKT'), ('02', 'KT'), ('03', 'LG U+'), ('알뜰폰', [('04', 'SKT'), ('05', 'KT'), ('06', 'LG U+')])], help_text='휴대폰 통신사', max_length=2, null=True)),
                ('address', models.CharField(blank=True, help_text='주소', max_length=120, null=True)),
                ('birth_date', models.DateField(blank=True, help_text='생년월일', null=True)),
                ('gender_code', models.PositiveSmallIntegerField(blank=True, choices=[('내국인', [(1, '남(1)'), (2, '여(2)'), (3, '남(3)'), (4, '여(4)'), (9, '남(9)'), (0, '여(10)')]), ('외국인', [(5, '남(5)'), (6, '여(6)'), (7, '남(7)'), (8, '여(8)')])], help_text='성별', null=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avatar', to='users.image')),
            ],
            options={
                'db_table': 'users_user_profile',
            },
        ),
        migrations.CreateModel(
            name='Invite',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to=settings.AUTH_USER_MODEL)),
                ('joiner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='joiners', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('inviter', 'joiner')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_vendor', models.BooleanField(default=False, verbose_name='vendor status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_online', models.PositiveSmallIntegerField(default=0)),
                ('last_password_change', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('deactivated_at', models.DateTimeField(blank=True, editable=False, help_text='탈퇴일', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', related_query_name='user', to='auth.group')),
                ('site', models.ForeignKey(blank=True, default=api.bases.users.models.get_default_site, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.site')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions_set', related_query_name='user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['email'],
                'unique_together': {('email',)},
            },
        ),
    ]
